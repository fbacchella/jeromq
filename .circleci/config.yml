version: 2.1
jobs:
    checkout:
        docker:
            - image: cimg/openjdk:25.0
        steps:
            - checkout
            - restore_cache:
                key: jeromq-{{ checksum "pom.xml" }}
            - run: mkdir -p /home/circleci/.sonar/cache /home/circleci/.m2/repository
            - run:
                command: |
                    mvn -B dependency:resolve dependency:resolve-plugins sonar:help jacoco:help gpg:help checkstyle:help -Psonar,versions -fn
            - persist_to_workspace:
                root: /
                paths:
                    - home/circleci/.m2/repository
                    - home/circleci/.sonar/cache
                    - home/circleci/project
    build:
        docker:
            - image: cimg/openjdk:25.0
        steps:
            - attach_workspace:
                at: /tmp/ws
            - run:
                command: |
                    mv -n /tmp/ws/home/circleci/.m2 /home/circleci/
                    mv -n /tmp/ws/home/circleci/project/* /home/circleci/project/
                    mv -n /tmp/ws/home/circleci/project/.??* /home/circleci/project/
            - run:
                command: mvn -B clean verify -DskipTests -s .circleci/settings.xml
                environment:
                    MAVEN_OPTS: "-Xmx2048m"
            - persist_to_workspace:
                root: /
                paths:
                    - home/circleci/.m2/repository
                    - home/circleci/project
    testsj25:
        docker:
            - image: cimg/openjdk:25.0
        steps:
            - attach_workspace:
                  at: /tmp/ws
            - run:
                  command: |
                      mv -n /tmp/ws/home/circleci/.m2 /home/circleci/
                      mv -n /tmp/ws/home/circleci/project/* /home/circleci/project/
                      mv -n /tmp/ws/home/circleci/project/.??* /home/circleci/project/
            - run:
                  command: |
                      # If no symbolic name, it's a PR, will run sonar
                      if [ -n "$(git symbolic-ref HEAD 2>/dev/null )" ] ; then
                          SONAR="jacoco:report sonar:sonar -Psonar -Dsonar.projectKey=$SONARCLOUD_PROJECTKEY"
                          echo "Doing sonar"
                      else
                          SONAR=""
                      fi
                      mkdir -p /tmp/$CIRCLE_JOB
                      mvn -B test $SONAR -Pskip -Darg.line="-Xmx2048m" -Djava.io.tmpdir="/tmp/$CIRCLE_JOB" -s .circleci/settings.xml
                  environment:
                      MAVEN_OPTS: "-Xmx1024m"
            - store_test_results:
                  path: target/surefire-reports
            - persist_to_workspace:
                  root: /
                  paths:
                      - home/circleci/.m2/repository
                      - home/circleci/.sonar/cache
                      - home/circleci/project
    testsj21:
      docker:
        - image: cimg/openjdk:21.0
      steps:
        - attach_workspace:
            at: /tmp/ws
        - run:
            command: |
              mv -n /tmp/ws/home/circleci/.m2 /home/circleci/
              mv -n /tmp/ws/home/circleci/project/* /home/circleci/project/
              mv -n /tmp/ws/home/circleci/project/.??* /home/circleci/project/
        - run:
            command: |
              mkdir -p /tmp/$CIRCLE_JOB
              mvn -B test -Pskip -Darg.line="-Xmx2048m" -Djava.io.tmpdir="/tmp/$CIRCLE_JOB" -s .circleci/settings.xml
            environment:
              MAVEN_OPTS: "-Xmx1024m"
        - store_test_results:
            path: target/surefire-reports
    testsj17:
        docker:
            - image: cimg/openjdk:17.0
        steps:
            - attach_workspace:
                  at: /tmp/ws
            - run:
                  command: |
                      mv -n /tmp/ws/home/circleci/.m2 /home/circleci/
                      mv -n /tmp/ws/home/circleci/project/* /home/circleci/project/
                      mv -n /tmp/ws/home/circleci/project/.??* /home/circleci/project/
            - run:
                  command: |
                      mkdir -p /tmp/$CIRCLE_JOB
                      mvn -B test -Pskip -Darg.line="-Xmx2048m" -Djava.io.tmpdir="/tmp/$CIRCLE_JOB" -s .circleci/settings.xml
                  environment:
                      MAVEN_OPTS: "-Xmx1024m"
            - store_test_results:
                  path: target/surefire-reports
    testsj11:
        docker:
            - image: cimg/openjdk:11.0
        steps:
            - attach_workspace:
                at: /tmp/ws
            - run:
                command: |
                    mv -n /tmp/ws/home/circleci/.m2 /home/circleci/
                    mv -n /tmp/ws/home/circleci/.sonar /home/circleci/
                    mv -n /tmp/ws/home/circleci/project/* /home/circleci/project/
                    mv -n /tmp/ws/home/circleci/project/.??* /home/circleci/project/
            - run:
                command: |
                    mkdir -p /tmp/$CIRCLE_JOB
                    # only test core module
                    cd jeromq-core
                    mvn -B test -Pskip -Darg.line="-Xmx2048m" -Djava.io.tmpdir="/tmp/$CIRCLE_JOB" -s ../.circleci/settings.xml
                environment:
                    MAVEN_OPTS: "-Xmx512m"
            - store_test_results:
                path: target/surefire-reports
            #don't persist_to_workspace, can't be done in parallel with testsj13
    publish:
        docker:
            - image: cimg/openjdk:25.0
        steps:
            - attach_workspace:
                at: /tmp/ws
            - run:
                command: |
                    mv -n /tmp/ws/home/circleci/.m2 /home/circleci/
                    mv -n /tmp/ws/home/circleci/.sonar /home/circleci/
                    mv -n /tmp/ws/home/circleci/project/* /home/circleci/project/
                    mv -n /tmp/ws/home/circleci/project/.??* /home/circleci/project/
            - run:
                command: |
                    if [ -n "$SECRING_GPG_ASC_BASE64" ] ; then
                        echo "$SECRING_GPG_ASC_BASE64" | base64 --decode | gpg --batch --no-tty --import --yes
                        GPGSIGN="-P gpgsign"
                    fi
                    # If no symbolic name, it's a PR, will not publish results
                    # If not the official github, it's a fork, don't publish either
                    if [ -n "$(git symbolic-ref HEAD 2>/dev/null )"  -a "$CIRCLE_REPOSITORY_URL" == "git@github.com:fbacchella/jeromq.git" ] ; then
                        PUBLISH="deploy"
                    else
                        PUBLISH="install"
                    fi
                    echo "publishing jobs: $PUBLISH"
                    mvn -B $PUBLISH -Pskip $GPGSIGN -DskipTests -Dmaven.javadoc.skip=false -s .circleci/settings.xml
                environment:
                    MAVEN_OPTS: "-Xmx2048m"
            - store_artifacts:
                path: /home/circleci/.m2/repository/fr/loghub/jeromq
                destination: /
            - persist_to_workspace:
                root: /
                paths:
                    - home/circleci/.m2/repository
                    - home/circleci/.sonar/cache
    savecache:
        docker:
            - image: cimg/openjdk:25.0
        steps:
            - attach_workspace:
                at: /tmp/ws
            - run:
                command: |
                    mv /tmp/ws/home/circleci/project/pom.xml /home/circleci/project/
                    mv /tmp/ws/home/circleci/.m2 /home/circleci/
                    mv /tmp/ws/home/circleci/.sonar /home/circleci/
            - save_cache:
                paths:
                    - /home/circleci/.m2/repository
                    - /home/circleci/.sonar/cache
                key: jeromq-{{ checksum "pom.xml" }}
workflows:
  version: 2.1
  build_and_test:
    jobs:
      - checkout
      - build:
          requires:
              - checkout
      - testsj11:
          requires:
              - build
      - testsj17:
          requires:
              - build
      - testsj21:
          requires:
            - build
      - testsj25:
            requires:
                - build
            context: "Security variables"
      - publish:
          requires:
              - testsj11
              - testsj17
              - testsj21
              - testsj25
          context: "Security variables"
      - savecache:
          requires:
              - publish
